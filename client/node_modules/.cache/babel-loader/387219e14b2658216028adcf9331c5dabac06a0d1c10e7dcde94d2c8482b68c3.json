{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/ActiveSessionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActiveSessionsList = () => {\n  _s();\n  const [activeSessions, setActiveSessions] = useState([]);\n  useEffect(() => {\n    const fetchActiveSessions = async () => {\n      try {\n        const response = await fetch('/sessions/active');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setActiveSessions(data);\n      } catch (error) {\n        console.error(\"Error fetching active sessions:\", error);\n      }\n    };\n    fetchActiveSessions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(List, {\n    component: \"nav\",\n    \"aria-label\": \"active game sessions\",\n    children: activeSessions.map((session, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: session.title,\n          secondary: `В игре: ${session.users.map(user => user.name).join(', ')}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, session._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), index < activeSessions.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ActiveSessionsList, \"jlXvLkHN3ropQ+x384cHb3lAFvo=\");\n_c = ActiveSessionsList;\nexport default ActiveSessionsList;\nvar _c;\n$RefreshReg$(_c, \"ActiveSessionsList\");","map":{"version":3,"names":["React","useEffect","useState","List","ListItem","ListItemText","Divider","jsxDEV","_jsxDEV","Fragment","_Fragment","ActiveSessionsList","_s","activeSessions","setActiveSessions","fetchActiveSessions","response","fetch","ok","Error","status","data","json","error","console","component","children","map","session","index","button","primary","title","secondary","users","user","name","join","fileName","_jsxFileName","lineNumber","columnNumber","_id","length","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/ActiveSessionsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { List, ListItem, ListItemText, Divider } from '@mui/material';\n\nconst ActiveSessionsList = () => {\n    const [activeSessions, setActiveSessions] = useState([]);\n\n    useEffect(() => {\n        const fetchActiveSessions = async () => {\n            try {\n                const response = await fetch('/sessions/active');\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setActiveSessions(data);\n            } catch (error) {\n                console.error(\"Error fetching active sessions:\", error);\n            }\n        };\n\n        fetchActiveSessions();\n    }, []);\n\n    return (\n        <List component=\"nav\" aria-label=\"active game sessions\">\n            {activeSessions.map((session, index) => (\n                <>\n                    <ListItem button key={session._id}>\n                        <ListItemText primary={session.title} secondary={`В игре: ${session.users.map(user => user.name).join(', ')}`} />\n                    </ListItem>\n                    {index < activeSessions.length - 1 && <Divider />}\n                </>\n            ))}\n        </List>\n    );\n};\n\nexport default ActiveSessionsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtE,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMc,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC;QAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,iBAAiB,CAACO,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAACL,IAAI;IAACsB,SAAS,EAAC,KAAK;IAAC,cAAW,sBAAsB;IAAAC,QAAA,EAClDb,cAAc,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BrB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACIlB,OAAA,CAACJ,QAAQ;QAAC0B,MAAM;QAAAJ,QAAA,eACZlB,OAAA,CAACH,YAAY;UAAC0B,OAAO,EAAEH,OAAO,CAACI,KAAM;UAACC,SAAS,EAAG,WAAUL,OAAO,CAACM,KAAK,CAACP,GAAG,CAACQ,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD/Fb,OAAO,CAACc,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB,CAAC,EACVZ,KAAK,GAAGhB,cAAc,CAAC8B,MAAM,GAAG,CAAC,iBAAInC,OAAA,CAACF,OAAO;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACnD,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAAC7B,EAAA,CAhCID,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AAkCxB,eAAeA,kBAAkB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}