{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/JoinSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SessionsList from './SessionsList';\nimport JoinSessionForm from './JoinSessionForm';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinSessionPage = () => {\n  _s();\n  const navigate = useNavigate(); // Используем хук\n  const [selectedSession, setSelectedSession] = useState(null);\n  const handleJoin = session => {\n    setSelectedSession(session);\n  };\n  const handleConfirmJoin = async (title, userName) => {\n    try {\n      const response = await fetch(`/sessions/join`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          userName\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Successfully joined the session\");\n      navigate(`/game/${title}`);\n      // Дополнительная логика после успешного присоединения\n    } catch (error) {\n      console.error(\"Error joining session:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SessionsList, {\n      onJoin: handleJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), selectedSession && /*#__PURE__*/_jsxDEV(JoinSessionForm, {\n      session: selectedSession,\n      onJoin: handleConfirmJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinSessionPage, \"8GrGYueOqQ/+jg7o7iD7nXrWsJs=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinSessionPage;\nexport default JoinSessionPage;\nvar _c;\n$RefreshReg$(_c, \"JoinSessionPage\");","map":{"version":3,"names":["React","useState","SessionsList","JoinSessionForm","useNavigate","jsxDEV","_jsxDEV","JoinSessionPage","_s","navigate","selectedSession","setSelectedSession","handleJoin","session","handleConfirmJoin","title","userName","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","console","log","error","children","onJoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/JoinSessionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SessionsList from './SessionsList';\nimport JoinSessionForm from './JoinSessionForm';\nimport { useNavigate } from 'react-router-dom'; // Импортируем useNavigate\n\nconst JoinSessionPage = () => {\n    const navigate = useNavigate(); // Используем хук\n    const [selectedSession, setSelectedSession] = useState(null);\n\n    const handleJoin = (session) => {\n        setSelectedSession(session);\n    };\n\n    const handleConfirmJoin = async (title, userName) => {\n        try {\n            const response = await fetch(`/sessions/join`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ title: title, userName }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            console.log(\"Successfully joined the session\");\n            navigate(`/game/${title}`);\n            // Дополнительная логика после успешного присоединения\n        } catch (error) {\n            console.error(\"Error joining session:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <SessionsList onJoin={handleJoin} />\n            {selectedSession && <JoinSessionForm session={selectedSession} onJoin={handleConfirmJoin} />}\n        </div>\n    );\n};\n\nexport default JoinSessionPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMW,UAAU,GAAIC,OAAO,IAAK;IAC5BF,kBAAkB,CAACE,OAAO,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACjD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gBAAe,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK,EAAEA,KAAK;UAAEC;QAAS,CAAC;MACnD,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;MAEAC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CnB,QAAQ,CAAE,SAAQM,KAAM,EAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA,CAACJ,YAAY;MAAC6B,MAAM,EAAEnB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnCzB,eAAe,iBAAIJ,OAAA,CAACH,eAAe;MAACU,OAAO,EAAEH,eAAgB;MAACqB,MAAM,EAAEjB;IAAkB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEd,CAAC;AAAC3B,EAAA,CApCID,eAAe;EAAA,QACAH,WAAW;AAAA;AAAAgC,EAAA,GAD1B7B,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}