{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    title\n  } = useParams(); // Получаем название сессии из URL\n  const [sessionDetails, setSessionDetails] = useState(null); // Состояние для хранения деталей сессии\n\n  useEffect(() => {\n    // Функция для загрузки деталей сессии\n    const fetchSessionDetails = async () => {\n      try {\n        // Замените URL на актуальный адрес вашего API\n        const response = await fetch(`/sessions/active`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSessionDetails(data); // Сохраняем детали сессии в состояние\n      } catch (error) {\n        console.error(\"Error fetching session details:\", error);\n      }\n    };\n    fetchSessionDetails();\n  }, []);\n\n  // Если данные сессии еще не загружены, отображаем сообщение о загрузке\n  if (!sessionDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0418\\u0433\\u0440\\u043E\\u0432\\u0430\\u044F \\u0441\\u0435\\u0441\\u0441\\u0438\\u044F: \", sessionDetails.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0432 \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sessionDetails.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) // Предполагаем, что у пользователя есть свойство name\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"vGzvWsuB9DO9V5HV1glMxA/Gq70=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","GamePage","_s","title","sessionDetails","setSessionDetails","fetchSessionDetails","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","users","map","user","index","name","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst GamePage = () => {\n    const { title } = useParams(); // Получаем название сессии из URL\n    const [sessionDetails, setSessionDetails] = useState(null); // Состояние для хранения деталей сессии\n\n    useEffect(() => {\n        // Функция для загрузки деталей сессии\n        const fetchSessionDetails = async () => {\n            try {\n                // Замените URL на актуальный адрес вашего API\n                const response = await fetch(`/sessions/active`);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setSessionDetails(data); // Сохраняем детали сессии в состояние\n            } catch (error) {\n                console.error(\"Error fetching session details:\", error);\n            }\n        };\n\n        fetchSessionDetails();\n    }, []);\n\n    // Если данные сессии еще не загружены, отображаем сообщение о загрузке\n    if (!sessionDetails) {\n        return <div>Загрузка деталей сессии...</div>;\n    }\n\n    return (\n        <div>\n            <h2>Игровая сессия: {sessionDetails.title}</h2>\n            <h3>Пользователи в сессии:</h3>\n            <ul>\n                {sessionDetails.users.map((user, index) => (\n                    <li key={index}>{user.name}</li> // Предполагаем, что у пользователя есть свойство name\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default GamePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5DD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiB,CAAC;QAChD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCR,iBAAiB,CAACO,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACF,cAAc,EAAE;IACjB,oBAAOJ,OAAA;MAAAgB,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChD;EAEA,oBACIpB,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,GAAI,mFAAgB,EAACZ,cAAc,CAACD,KAAK;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC/CpB,OAAA;MAAAgB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BpB,OAAA;MAAAgB,QAAA,EACKZ,cAAc,CAACiB,KAAK,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClCxB,OAAA;QAAAgB,QAAA,EAAiBO,IAAI,CAACE;MAAI,GAAjBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;MACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAvCKD,QAAQ;EAAA,QACQH,SAAS;AAAA;AAAA4B,EAAA,GADzBzB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}