{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LeaveSessionButton from \"./LeaveSession\";\nimport UserCards from \"./UserCards\";\nimport DrawCards from \"./DrawCards\";\nimport { Typography, Grid, Card, CardContent, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    title\n  } = useParams();\n  const [sessionDetails, setSessionDetails] = useState(null);\n  useEffect(() => {\n    const fetchSessionDetails = async () => {\n      try {\n        const response = await fetch(`/sessions/details/${title}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSessionDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching session details:\", error);\n      }\n    };\n    fetchSessionDetails();\n  }, [title]);\n  if (!sessionDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: [\"\\u0418\\u0433\\u0440\\u043E\\u0432\\u0430\\u044F \\u0441\\u0435\\u0441\\u0441\\u0438\\u044F: \", sessionDetails.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sessionDetails.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: user.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawCards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserCards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"\\u0411\\u0430\\u043D\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), sessionDetails.bank.map((bankEntry, index) => /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"\\u0418\\u0433\\u0440\\u043E\\u043A: \", bankEntry.playerId.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: bankEntry.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [card.name, \" (\", card.type, \")\"]\n                }, cardIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"\\u0421\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), sessionDetails.property.map((propertyEntry, index) => /*#__PURE__*/_jsxDEV(Box, {\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"\\u0418\\u0433\\u0440\\u043E\\u043A: \", propertyEntry.playerId.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: propertyEntry.cards.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [card.name, \" (\", card.type, \")\"]\n                }, cardIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"vGzvWsuB9DO9V5HV1glMxA/Gq70=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","LeaveSessionButton","UserCards","DrawCards","Typography","Grid","Card","CardContent","Box","jsxDEV","_jsxDEV","GamePage","_s","title","sessionDetails","setSessionDetails","fetchSessionDetails","response","fetch","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","p","container","spacing","item","xs","md","variant","gutterBottom","users","map","user","index","name","bank","bankEntry","mb","playerId","cards","card","cardIndex","type","property","propertyEntry","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LeaveSessionButton from \"./LeaveSession\";\nimport UserCards from \"./UserCards\";\nimport DrawCards from \"./DrawCards\";\nimport { Typography, Grid, Card, CardContent, Box } from '@mui/material';\n\nconst GamePage = () => {\n    const { title } = useParams();\n    const [sessionDetails, setSessionDetails] = useState(null);\n\n    useEffect(() => {\n        const fetchSessionDetails = async () => {\n            try {\n                const response = await fetch(`/sessions/details/${title}`);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setSessionDetails(data);\n            } catch (error) {\n                console.error(\"Error fetching session details:\", error);\n            }\n        };\n\n        fetchSessionDetails();\n    }, [title]);\n\n    if (!sessionDetails) {\n        return <div>Загрузка деталей сессии...</div>;\n    }\n\n\n    return (\n        <Box sx={{ flexGrow: 1, p: 3 }}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} md={6}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Игровая сессия: {sessionDetails.title}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom>\n                        Текущие участники:\n                    </Typography>\n                    <ul>\n                        {sessionDetails.users.map((user, index) => (\n                            <li key={index}>{user.name}</li>\n                        ))}\n                    </ul>\n                    {/* Компоненты для взятия карт и отображения карт в руке игрока */}\n                    <DrawCards />\n                    <UserCards />\n                </Grid>\n\n                {/* Компонент для отображения карт в банке */}\n                <Grid item xs={12} md={3}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Банк\n                            </Typography>\n                            {sessionDetails.bank.map((bankEntry, index) => (\n                                <Box key={index} mb={2}>\n                                    <Typography variant=\"h6\">Игрок: {bankEntry.playerId.name}</Typography>\n                                    <ul>\n                                        {bankEntry.cards.map((card, cardIndex) => (\n                                            <li key={cardIndex}>{card.name} ({card.type})</li>\n                                        ))}\n                                    </ul>\n                                </Box>\n                            ))}\n                        </CardContent>\n                    </Card>\n                </Grid>\n\n                {/* Компонент для отображения карт в собственности */}\n                <Grid item xs={12} md={3}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\" gutterBottom>\n                                Собственность\n                            </Typography>\n                            {sessionDetails.property.map((propertyEntry, index) => (\n                                <Box key={index} mb={2}>\n                                    <Typography variant=\"h6\">Игрок: {propertyEntry.playerId.name}</Typography>\n                                    <ul>\n                                        {propertyEntry.cards.map((card, cardIndex) => (\n                                            <li key={cardIndex}>{card.name} ({card.type})</li>\n                                        ))}\n                                    </ul>\n                                </Box>\n                            ))}\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Box>\n    );\n}\n\nexport default GamePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}