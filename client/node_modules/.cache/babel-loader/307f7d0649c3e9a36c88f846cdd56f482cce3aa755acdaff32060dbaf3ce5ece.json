{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCards = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    const fetchUserCards = async () => {\n      try {\n        // Предположим, что имя пользователя хранится в localStorage под ключом 'username'\n        const userName = localStorage.getItem('username');\n        const response = await fetch('/sessions/cards', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            // Отправляем имя пользователя в заголовке запроса\n            'Username': userName\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCards(data);\n      } catch (error) {\n        console.error(\"Error fetching user cards:\", error);\n      }\n    };\n    fetchUserCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cards:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [card.name, \" (\", card.type, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(UserCards, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = UserCards;\nexport default UserCards;\nvar _c;\n$RefreshReg$(_c, \"UserCards\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","UserCards","_s","cards","setCards","fetchUserCards","userName","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","name","type","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst UserCards = () => {\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        const fetchUserCards = async () => {\n            try {\n                // Предположим, что имя пользователя хранится в localStorage под ключом 'username'\n                const userName = localStorage.getItem('username');\n                const response = await fetch('/sessions/cards', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Отправляем имя пользователя в заголовке запроса\n                        'Username': userName,\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setCards(data);\n            } catch (error) {\n                console.error(\"Error fetching user cards:\", error);\n            }\n        };\n\n        fetchUserCards();\n    }, []);\n\n    return (\n        <div>\n            <h2>Your Cards:</h2>\n            <ul>\n                {cards.map((card, index) => (\n                    <li key={index}>{card.name} ({card.type})</li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default UserCards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA;QACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;UAC5CC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC;YACA,UAAU,EAAEN;UAChB;QACJ,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;QAC7D;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCb,QAAQ,CAACY,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDb,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBxB,OAAA;MAAAoB,QAAA,EACKjB,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnB3B,OAAA;QAAAoB,QAAA,GAAiBM,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,IAAI,EAAC,GAAC;MAAA,GAAhCF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzCID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}