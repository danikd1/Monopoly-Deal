{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCards = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const {\n    title\n  } = useParams();\n  useEffect(() => {\n    const fetchUserCards = async () => {\n      try {\n        const userName = localStorage.getItem('username');\n        const response = await fetch('/sessions/cards', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            // Отправляем имя пользователя в заголовке запроса\n            'Username': userName\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCards(data);\n      } catch (error) {\n        console.error(\"Error fetching user cards:\", error);\n      }\n    };\n    fetchUserCards();\n  }, []);\n  const handleAddToBank = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/bank`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to bank');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в банк\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to bank successfully');\n    } catch (error) {\n      console.error('Error moving card to bank:', error);\n    }\n  };\n  const handleAddToProperty = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/property`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to property');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в собственность\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to property successfully');\n    } catch (error) {\n      console.error('Error moving card to property:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u0412\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0440\\u0442\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [card.name, \" (\", card.type, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.image,\n              alt: card.name,\n              style: {\n                maxWidth: '100%',\n                height: 'auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [['money', 'action'].includes(card.type) && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAddToBank(card.id),\n                variant: \"outlined\",\n                color: \"primary\",\n                style: {\n                  margin: '10px'\n                },\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0431\\u0430\\u043D\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this), card.type === 'property' && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAddToProperty(card.id),\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u0441\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(UserCards, \"CukZSFtu0yyy7STDLS0uUu2Iq3o=\", false, function () {\n  return [useParams];\n});\n_c = UserCards;\nexport default UserCards;\nvar _c;\n$RefreshReg$(_c, \"UserCards\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","UserCards","_s","cards","setCards","title","fetchUserCards","userName","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","error","console","handleAddToBank","cardId","body","JSON","stringify","updatedCards","filter","card","id","log","handleAddToProperty","children","Typography","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","Grid","container","spacing","map","item","xs","sm","md","Card","CardContent","component","name","type","src","image","alt","style","maxWidth","height","includes","Button","onClick","color","margin","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\n\nconst UserCards = () => {\n    const [cards, setCards] = useState([]);\n    const { title } = useParams();\n\n    useEffect(() => {\n        const fetchUserCards = async () => {\n            try {\n                const userName = localStorage.getItem('username');\n                const response = await fetch('/sessions/cards', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Отправляем имя пользователя в заголовке запроса\n                        'Username': userName,\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setCards(data);\n            } catch (error) {\n                console.error(\"Error fetching user cards:\", error);\n            }\n        };\n\n        fetchUserCards();\n    }, []);\n\n    const handleAddToBank = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/bank`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to bank');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в банк\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to bank successfully');\n        } catch (error) {\n            console.error('Error moving card to bank:', error);\n        }\n    };\n\n    const handleAddToProperty = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/property`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to property');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в собственность\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to property successfully');\n        } catch (error) {\n            console.error('Error moving card to property:', error);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>\n                Ваши карты:\n            </Typography>\n            <Grid container spacing={2}>\n                {cards.map((card) => (\n                    <Grid item key={card.id} xs={12} sm={6} md={4}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"h5\" component=\"div\">\n                                    {card.name} ({card.type})\n                                </Typography>\n                                <img src={card.image} alt={card.name} style={{ maxWidth: '100%', height: 'auto' }} />\n                                <div>\n                                    {['money', 'action'].includes(card.type) && (\n                                        <Button onClick={() => handleAddToBank(card.id)} variant=\"outlined\" color=\"primary\" style={{ margin: '10px' }}>\n                                            Добавить в банк\n                                        </Button>\n                                    )}\n                                    {card.type === 'property' && (\n                                        <Button onClick={() => handleAddToProperty(card.id)} variant=\"outlined\" color=\"secondary\">\n                                            Добавить в собственность\n                                        </Button>\n                                    )}\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n};\n\nexport default UserCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}