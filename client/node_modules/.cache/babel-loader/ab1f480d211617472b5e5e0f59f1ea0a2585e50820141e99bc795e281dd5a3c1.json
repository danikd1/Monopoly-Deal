{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Grid, Card, CardContent, CardActionArea, Button, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCards = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const {\n    title\n  } = useParams();\n  const handleSelectCard = cardId => {\n    setCards(cards === cardId ? null : cardId); // Переключаем выбранную карту\n  };\n  useEffect(() => {\n    const fetchUserCards = async () => {\n      try {\n        const userName = localStorage.getItem('username');\n        const response = await fetch('/sessions/cards', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            // Отправляем имя пользователя в заголовке запроса\n            'Username': userName\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCards(data);\n      } catch (error) {\n        console.error(\"Error fetching user cards:\", error);\n      }\n    };\n    fetchUserCards();\n  }, []);\n  const handleAddToBank = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/bank`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to bank');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в банк\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to bank successfully');\n    } catch (error) {\n      console.error('Error moving card to bank:', error);\n    }\n  };\n  const handleAddToProperty = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/property`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to property');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в собственность\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to property successfully');\n    } catch (error) {\n      console.error('Error moving card to property:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\u0412\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0440\\u0442\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      gap: 2,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Box, {\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n          onClick: () => handleSelectCard(card.id),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              maxWidth: 345\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: card.image,\n                alt: card.name,\n                style: {\n                  width: '100%',\n                  height: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), cards === card.id && /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          zIndex: \"modal\",\n          children: [['money', 'action'].includes(card.type) && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAddToBank(card.id),\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"small\",\n            sx: {\n              m: 0.5\n            },\n            children: \"\\u0412 \\u0431\\u0430\\u043D\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this), card.type === 'property' && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAddToProperty(card.id),\n            variant: \"contained\",\n            color: \"secondary\",\n            size: \"small\",\n            sx: {\n              m: 0.5\n            },\n            children: \"\\u0412 \\u0441\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)]\n      }, card.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(UserCards, \"CukZSFtu0yyy7STDLS0uUu2Iq3o=\", false, function () {\n  return [useParams];\n});\n_c = UserCards;\nexport default UserCards;\nvar _c;\n$RefreshReg$(_c, \"UserCards\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Grid","Card","CardContent","CardActionArea","Button","Box","Typography","jsxDEV","_jsxDEV","UserCards","_s","cards","setCards","title","handleSelectCard","cardId","fetchUserCards","userName","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","error","console","handleAddToBank","body","JSON","stringify","updatedCards","filter","card","id","log","handleAddToProperty","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","gap","map","position","onClick","sx","maxWidth","src","image","alt","name","style","width","height","top","left","right","zIndex","includes","type","color","size","m","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport { Grid, Card, CardContent, CardActionArea, Button, Box, Typography } from '@mui/material';\n\nconst UserCards = () => {\n    const [cards, setCards] = useState([]);\n    const { title } = useParams();\n\n    const handleSelectCard = (cardId) => {\n        setCards(cards === cardId ? null : cardId); // Переключаем выбранную карту\n    };\n\n    useEffect(() => {\n        const fetchUserCards = async () => {\n            try {\n                const userName = localStorage.getItem('username');\n                const response = await fetch('/sessions/cards', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Отправляем имя пользователя в заголовке запроса\n                        'Username': userName,\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setCards(data);\n            } catch (error) {\n                console.error(\"Error fetching user cards:\", error);\n            }\n        };\n\n        fetchUserCards();\n    }, []);\n\n    const handleAddToBank = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/bank`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to bank');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в банк\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to bank successfully');\n        } catch (error) {\n            console.error('Error moving card to bank:', error);\n        }\n    };\n\n    const handleAddToProperty = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/property`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to property');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в собственность\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to property successfully');\n        } catch (error) {\n            console.error('Error moving card to property:', error);\n        }\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>\n                Ваши карты:\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"center\" gap={2}>\n                {cards.map((card) => (\n                    <Box key={card.id} position=\"relative\">\n                        <CardActionArea onClick={() => handleSelectCard(card.id)}>\n                            <Card sx={{ maxWidth: 345 }}>\n                                <CardContent>\n                                    <img src={card.image} alt={card.name} style={{ width: '100%', height: 'auto' }} />\n                                </CardContent>\n                            </Card>\n                        </CardActionArea>\n                        {cards === card.id && (\n                            <Box display=\"flex\" justifyContent=\"center\" position=\"absolute\" top={0} left={0} right={0} zIndex=\"modal\">\n                                {['money', 'action'].includes(card.type) && (\n                                    <Button onClick={() => handleAddToBank(card.id)} variant=\"contained\" color=\"primary\" size=\"small\" sx={{ m: 0.5 }}>\n                                        В банк\n                                    </Button>\n                                )}\n                                {card.type === 'property' && (\n                                    <Button onClick={() => handleAddToProperty(card.id)} variant=\"contained\" color=\"secondary\" size=\"small\" sx={{ m: 0.5 }}>\n                                        В собственность\n                                    </Button>\n                                )}\n                            </Box>\n                        )}\n                    </Box>\n                ))}\n            </Box>\n        </div>\n    );\n};\n\nexport default UserCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}