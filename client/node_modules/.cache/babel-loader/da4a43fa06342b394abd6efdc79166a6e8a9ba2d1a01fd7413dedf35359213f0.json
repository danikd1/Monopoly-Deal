{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/JoinSessionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SessionsList from './SessionsList';\nimport JoinSessionForm from './JoinSessionForm';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Box, Snackbar, Alert, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JoinSessionPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedSession, setSelectedSession] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false); // Для управления видимостью Snackbar\n  const [snackbarMessage, setSnackbarMessage] = useState(''); // Сообщение в Snackbar\n\n  const handleJoin = session => {\n    setSelectedSession(session);\n  };\n  const handleConfirmJoin = async (title, userName) => {\n    try {\n      const response = await fetch(`/sessions/join`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title: title,\n          userName\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Successfully joined the session\");\n      navigate(`/game/${title}`);\n    } catch (error) {\n      console.error(\"Error joining session:\", error);\n      setSnackbarMessage(\"Ошибка при присоединении к сессии\"); // Устанавливаем сообщение об ошибке\n      setOpenSnackbar(true); // Показываем Snackbar\n    }\n  };\n  const handleBack = () => {\n    navigate('/');\n  };\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SessionsList, {\n      onJoin: handleJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), selectedSession && /*#__PURE__*/_jsxDEV(JoinSessionForm, {\n      session: selectedSession,\n      onJoin: handleConfirmJoin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleBack,\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSnackbar,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(JoinSessionPage, \"zDmEblTHn0+IusEnYMDMV+HcfeU=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinSessionPage;\nexport default JoinSessionPage;\nvar _c;\n$RefreshReg$(_c, \"JoinSessionPage\");","map":{"version":3,"names":["React","useState","SessionsList","JoinSessionForm","useNavigate","Button","Box","Snackbar","Alert","Typography","jsxDEV","_jsxDEV","JoinSessionPage","_s","navigate","selectedSession","setSelectedSession","openSnackbar","setOpenSnackbar","snackbarMessage","setSnackbarMessage","handleJoin","session","handleConfirmJoin","title","userName","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","console","log","error","handleBack","handleCloseSnackbar","event","reason","children","onJoin","fileName","_jsxFileName","lineNumber","columnNumber","mt","variant","color","onClick","open","autoHideDuration","onClose","severity","sx","width","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/JoinSessionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SessionsList from './SessionsList';\nimport JoinSessionForm from './JoinSessionForm';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Box, Snackbar, Alert, Typography } from '@mui/material';\n\nconst JoinSessionPage = () => {\n    const navigate = useNavigate();\n    const [selectedSession, setSelectedSession] = useState(null);\n    const [openSnackbar, setOpenSnackbar] = useState(false); // Для управления видимостью Snackbar\n    const [snackbarMessage, setSnackbarMessage] = useState(''); // Сообщение в Snackbar\n\n    const handleJoin = (session) => {\n        setSelectedSession(session);\n    };\n\n    const handleConfirmJoin = async (title, userName) => {\n        try {\n            const response = await fetch(`/sessions/join`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ title: title, userName }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            console.log(\"Successfully joined the session\");\n            navigate(`/game/${title}`);\n        } catch (error) {\n            console.error(\"Error joining session:\", error);\n            setSnackbarMessage(\"Ошибка при присоединении к сессии\"); // Устанавливаем сообщение об ошибке\n            setOpenSnackbar(true); // Показываем Snackbar\n        }\n    };\n\n    const handleBack = () => {\n        navigate('/');\n    };\n\n    const handleCloseSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpenSnackbar(false);\n    };\n\n    return (\n        <div>\n            <SessionsList onJoin={handleJoin}/>\n            {selectedSession && <JoinSessionForm session={selectedSession} onJoin={handleConfirmJoin}/>}\n            <Box mt={2}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleBack}>\n                    Назад\n                </Button>\n            </Box>\n            {/* Snackbar для показа сообщения об ошибке */}\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\n                <Alert onClose={handleCloseSnackbar} severity=\"error\" sx={{ width: '100%' }}>\n                    {snackbarMessage}\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default JoinSessionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}