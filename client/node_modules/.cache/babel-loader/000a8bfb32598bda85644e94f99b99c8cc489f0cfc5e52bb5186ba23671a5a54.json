{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/DrawCards.js\",\n  _s = $RefreshSig$();\n// DrawCards.js\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawCards = () => {\n  _s();\n  const {\n    title\n  } = useParams(); // Используем название сессии из URL\n  const [cards, setCards] = useState([]);\n  const handleDrawCards = async () => {\n    const userName = localStorage.getItem('username'); // Предполагается, что имя пользователя сохранено в localStorage\n\n    try {\n      const response = await fetch(`/sessions/${title}/draw-cards`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      // Обработка успешного взятия карт\n      console.log('Cards drawn successfully');\n      // Вызов функции обновления состояния игры, если таковая передается\n      if (updateGame) updateGame();\n    } catch (error) {\n      console.error('Error drawing cards:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleDrawCards,\n    children: \"\\u0412\\u0437\\u044F\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u044B\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(DrawCards, \"fpGbVf/czP2o+BKEr6MXEZ0aiRM=\", false, function () {\n  return [useParams];\n});\n_c = DrawCards;\nexport default DrawCards;\nvar _c;\n$RefreshReg$(_c, \"DrawCards\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","DrawCards","_s","title","cards","setCards","handleDrawCards","userName","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","console","log","updateGame","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/DrawCards.js"],"sourcesContent":["// DrawCards.js\nimport React, {useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst DrawCards = () => {\n    const { title } = useParams(); // Используем название сессии из URL\n    const [cards, setCards] = useState([]);\n\n    const handleDrawCards = async () => {\n        const userName = localStorage.getItem('username'); // Предполагается, что имя пользователя сохранено в localStorage\n\n        try {\n            const response = await fetch(`/sessions/${title}/draw-cards`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ userName }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n\n            // Обработка успешного взятия карт\n            console.log('Cards drawn successfully');\n            // Вызов функции обновления состояния игры, если таковая передается\n            if (updateGame) updateGame();\n        } catch (error) {\n            console.error('Error drawing cards:', error);\n        }\n    };\n\n    return (\n        <button onClick={handleDrawCards}>Взять карты</button>\n    );\n};\n\nexport default DrawCards;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAM,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;IAEnD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYR,KAAM,aAAY,EAAE;QAC1DS,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET;QAAS,CAAC;MACrC,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;MAC7D;;MAEA;MACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC;MACA,IAAIC,UAAU,EAAEA,UAAU,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAQwB,OAAO,EAAElB,eAAgB;IAAAmB,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAE9D,CAAC;AAAC3B,EAAA,CA9BID,SAAS;EAAA,QACOH,SAAS;AAAA;AAAAgC,EAAA,GADzB7B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}