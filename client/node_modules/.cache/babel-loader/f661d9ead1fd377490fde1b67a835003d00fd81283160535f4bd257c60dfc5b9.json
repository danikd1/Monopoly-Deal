{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Box, Typography, Card, CardActionArea, Button, CardMedia, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserCards = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const {\n    title\n  } = useParams();\n  useEffect(() => {\n    const fetchUserCards = async () => {\n      try {\n        const userName = localStorage.getItem('username');\n        const response = await fetch('/sessions/cards', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            // Отправляем имя пользователя в заголовке запроса\n            'Username': userName\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCards(data);\n      } catch (error) {\n        console.error(\"Error fetching user cards:\", error);\n      }\n    };\n    fetchUserCards();\n  }, []);\n  const handleAddToBank = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/bank`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to bank');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в банк\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to bank successfully');\n    } catch (error) {\n      console.error('Error moving card to bank:', error);\n    }\n  };\n  const handleAddToProperty = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/property`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add card to property');\n      }\n\n      // Обновляем состояние, удаляя карту, добавленную в собственность\n      const updatedCards = cards.filter(card => card.id !== cardId);\n      setCards(updatedCards);\n      console.log('Card added to property successfully');\n    } catch (error) {\n      console.error('Error moving card to property:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"\\u0412\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0440\\u0442\\u044B:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      gap: 2,\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 200,\n          m: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"auto\",\n            image: card.image,\n            alt: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: [['money', 'action'].includes(card.type) && /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleAddToBank(card.id),\n                variant: \"outlined\",\n                color: \"primary\",\n                sx: {\n                  mr: 1\n                },\n                children: \"\\u0412 \\u0431\\u0430\\u043D\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 41\n              }, this), card.type === 'property' && /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                onClick: () => handleAddToProperty(card.id),\n                variant: \"outlined\",\n                color: \"secondary\",\n                children: \"\\u0412 \\u0441\\u043E\\u0431\\u0441\\u0442\\u0432\\u0435\\u043D\\u043D\\u043E\\u0441\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n_s(UserCards, \"CukZSFtu0yyy7STDLS0uUu2Iq3o=\", false, function () {\n  return [useParams];\n});\n_c = UserCards;\nexport default UserCards;\nvar _c;\n$RefreshReg$(_c, \"UserCards\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Box","Typography","Card","CardActionArea","Button","CardMedia","CardContent","jsxDEV","_jsxDEV","UserCards","_s","cards","setCards","title","fetchUserCards","userName","localStorage","getItem","response","fetch","method","headers","ok","Error","status","data","json","error","console","handleAddToBank","cardId","body","JSON","stringify","updatedCards","filter","card","id","log","handleAddToProperty","sx","pt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","map","maxWidth","m","component","height","image","alt","name","includes","type","size","onClick","color","mr","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/UserCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {useParams} from \"react-router-dom\";\nimport { Box, Typography, Card, CardActionArea, Button, CardMedia, CardContent } from '@mui/material';\n\nconst UserCards = () => {\n    const [cards, setCards] = useState([]);\n    const { title } = useParams();\n\n    useEffect(() => {\n        const fetchUserCards = async () => {\n            try {\n                const userName = localStorage.getItem('username');\n                const response = await fetch('/sessions/cards', {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        // Отправляем имя пользователя в заголовке запроса\n                        'Username': userName,\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setCards(data);\n            } catch (error) {\n                console.error(\"Error fetching user cards:\", error);\n            }\n        };\n\n        fetchUserCards();\n    }, []);\n\n    const handleAddToBank = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/bank`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to bank');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в банк\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to bank successfully');\n        } catch (error) {\n            console.error('Error moving card to bank:', error);\n        }\n    };\n\n    const handleAddToProperty = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/property`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to add card to property');\n            }\n\n            // Обновляем состояние, удаляя карту, добавленную в собственность\n            const updatedCards = cards.filter(card => card.id !== cardId);\n            setCards(updatedCards);\n            console.log('Card added to property successfully');\n        } catch (error) {\n            console.error('Error moving card to property:', error);\n        }\n    };\n\n    return (\n        <Box sx={{ pt: 2 }}>\n            <Typography variant=\"h5\" gutterBottom>\n                Ваши карты:\n            </Typography>\n            <Box display=\"flex\"  gap={2}>\n                {cards.map((card) => (\n                    <Card sx={{ maxWidth: 200, m: 1 }} key={card.id}>\n                        <CardActionArea>\n                            <CardMedia\n                                component=\"img\"\n                                height=\"auto\"\n                                image={card.image}\n                                alt={card.name}\n                            />\n                            <CardContent>\n                                <Box>\n                                    {['money', 'action'].includes(card.type) && (\n                                        <Button size=\"small\" onClick={() => handleAddToBank(card.id)} variant=\"outlined\" color=\"primary\" sx={{ mr: 1 }}>\n                                            В банк\n                                        </Button>\n                                    )}\n                                    {card.type === 'property' && (\n                                        <Button size=\"small\" onClick={() => handleAddToProperty(card.id)} variant=\"outlined\" color=\"secondary\">\n                                            В собственность\n                                        </Button>\n                                    )}\n                                </Box>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                ))}\n            </Box>\n        </Box>\n    );\n};\n\nexport default UserCards;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,EAAEC,cAAc,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEgB;EAAM,CAAC,GAAGd,SAAS,CAAC,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACZ,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;UAC5CC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC;YACA,UAAU,EAAEN;UAChB;QACJ,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;QAC7D;QAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCd,QAAQ,CAACa,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ,CAAC;IAEDb,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,eAAe,GAAG,MAAOC,MAAM,IAAK;IACtC,MAAMf,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYN,KAAM,OAAM,EAAE;QACpDO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,QAAQ;UAAEe;QAAO,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;;MAEA;MACA,MAAMW,YAAY,GAAGvB,KAAK,CAACwB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAAC;MAC7DlB,QAAQ,CAACsB,YAAY,CAAC;MACtBN,OAAO,CAACU,GAAG,CAAC,iCAAiC,CAAC;IAClD,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAED,MAAMY,mBAAmB,GAAG,MAAOT,MAAM,IAAK;IAC1C,MAAMf,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEjD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYN,KAAM,WAAU,EAAE;QACxDO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,QAAQ;UAAEe;QAAO,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACI,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;MACrD;;MAEA;MACA,MAAMW,YAAY,GAAGvB,KAAK,CAACwB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKP,MAAM,CAAC;MAC7DlB,QAAQ,CAACsB,YAAY,CAAC;MACtBN,OAAO,CAACU,GAAG,CAAC,qCAAqC,CAAC;IACtD,CAAC,CAAC,OAAOX,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;EAED,oBACInB,OAAA,CAACR,GAAG;IAACwC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACflC,OAAA,CAACP,UAAU;MAAC0C,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbxC,OAAA,CAACR,GAAG;MAACiD,OAAO,EAAC,MAAM;MAAEC,GAAG,EAAE,CAAE;MAAAR,QAAA,EACvB/B,KAAK,CAACwC,GAAG,CAAEf,IAAI,iBACZ5B,OAAA,CAACN,IAAI;QAACsC,EAAE,EAAE;UAAEY,QAAQ,EAAE,GAAG;UAAEC,CAAC,EAAE;QAAE,CAAE;QAAAX,QAAA,eAC9BlC,OAAA,CAACL,cAAc;UAAAuC,QAAA,gBACXlC,OAAA,CAACH,SAAS;YACNiD,SAAS,EAAC,KAAK;YACfC,MAAM,EAAC,MAAM;YACbC,KAAK,EAAEpB,IAAI,CAACoB,KAAM;YAClBC,GAAG,EAAErB,IAAI,CAACsB;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFxC,OAAA,CAACF,WAAW;YAAAoC,QAAA,eACRlC,OAAA,CAACR,GAAG;cAAA0C,QAAA,GACC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAACiB,QAAQ,CAACvB,IAAI,CAACwB,IAAI,CAAC,iBACpCpD,OAAA,CAACJ,MAAM;gBAACyD,IAAI,EAAC,OAAO;gBAACC,OAAO,EAAEA,CAAA,KAAMjC,eAAe,CAACO,IAAI,CAACC,EAAE,CAAE;gBAACM,OAAO,EAAC,UAAU;gBAACoB,KAAK,EAAC,SAAS;gBAACvB,EAAE,EAAE;kBAAEwB,EAAE,EAAE;gBAAE,CAAE;gBAAAtB,QAAA,EAAC;cAEhH;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACX,EACAZ,IAAI,CAACwB,IAAI,KAAK,UAAU,iBACrBpD,OAAA,CAACJ,MAAM;gBAACyD,IAAI,EAAC,OAAO;gBAACC,OAAO,EAAEA,CAAA,KAAMvB,mBAAmB,CAACH,IAAI,CAACC,EAAE,CAAE;gBAACM,OAAO,EAAC,UAAU;gBAACoB,KAAK,EAAC,WAAW;gBAAArB,QAAA,EAAC;cAEvG;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACX;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC,GAtBmBZ,IAAI,CAACC,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuBzC,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACtC,EAAA,CApHID,SAAS;EAAA,QAEOV,SAAS;AAAA;AAAAkE,EAAA,GAFzBxD,SAAS;AAsHf,eAAeA,SAAS;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}