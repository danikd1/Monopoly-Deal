{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LeaveSession from \"./LeaveSession\";\nimport LeaveSessionButton from \"./LeaveSession\";\nimport UserCards from \"./UserCards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const {\n    title\n  } = useParams();\n  const [sessionDetails, setSessionDetails] = useState(null);\n  useEffect(() => {\n    const fetchSessionDetails = async () => {\n      try {\n        // Предполагается, что ваш эндпоинт ожидает название сессии в URL\n        const response = await fetch(`/sessions/details/${title}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setSessionDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching session details:\", error);\n      }\n    };\n    fetchSessionDetails();\n  }, [title]);\n  const moveToBank = async cardId => {\n    const userName = localStorage.getItem('username');\n    try {\n      const response = await fetch(`/sessions/${title}/bank`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userName,\n          cardId\n        })\n      });\n      if (!response.ok) throw new Error('Failed to add card to bank');\n\n      // Обновите состояние компонента для отображения изменений\n      console.log('Card added to bank successfully');\n      // Здесь может быть код для обновления UI\n    } catch (error) {\n      console.error('Error moving card to bank:', error);\n    }\n  };\n\n  // Обработка состояния загрузки\n  if (!sessionDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439 \\u0441\\u0435\\u0441\\u0441\\u0438\\u0438...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0418\\u0433\\u0440\\u043E\\u0432\\u0430\\u044F \\u0441\\u0435\\u0441\\u0441\\u0438\\u044F: \", sessionDetails.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sessionDetails.users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LeaveSessionButton, {\n      sessionTitle: sessionDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePage, \"vGzvWsuB9DO9V5HV1glMxA/Gq70=\", false, function () {\n  return [useParams];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","LeaveSession","LeaveSessionButton","UserCards","jsxDEV","_jsxDEV","GamePage","_s","title","sessionDetails","setSessionDetails","fetchSessionDetails","response","fetch","ok","Error","status","data","json","error","console","moveToBank","cardId","userName","localStorage","getItem","method","headers","body","JSON","stringify","log","children","fileName","_jsxFileName","lineNumber","columnNumber","users","map","user","index","name","sessionTitle","_c","$RefreshReg$"],"sources":["/Users/macbookpro/deal-monopoly/client/src/frontend/GamePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LeaveSession from \"./LeaveSession\";\nimport LeaveSessionButton from \"./LeaveSession\";\nimport UserCards from \"./UserCards\";\n\nconst GamePage = () => {\n    const { title } = useParams();\n    const [sessionDetails, setSessionDetails] = useState(null);\n\n    useEffect(() => {\n        const fetchSessionDetails = async () => {\n            try {\n                // Предполагается, что ваш эндпоинт ожидает название сессии в URL\n                const response = await fetch(`/sessions/details/${title}`);\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const data = await response.json();\n                setSessionDetails(data);\n            } catch (error) {\n                console.error(\"Error fetching session details:\", error);\n            }\n        };\n\n        fetchSessionDetails();\n    }, [title]);\n\n    const moveToBank = async (cardId) => {\n        const userName = localStorage.getItem('username');\n\n        try {\n            const response = await fetch(`/sessions/${title}/bank`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ userName, cardId }),\n            });\n\n            if (!response.ok) throw new Error('Failed to add card to bank');\n\n            // Обновите состояние компонента для отображения изменений\n            console.log('Card added to bank successfully');\n            // Здесь может быть код для обновления UI\n        } catch (error) {\n            console.error('Error moving card to bank:', error);\n        }\n    };\n\n    // Обработка состояния загрузки\n    if (!sessionDetails) {\n        return <div>Загрузка деталей сессии...</div>;\n    }\n\n    return (\n        <div>\n            <h2>Игровая сессия: {sessionDetails.title}</h2>\n            <h3>Текущие участники:</h3>\n            <ul>\n                {sessionDetails.users.map((user, index) => (\n                    <li key={index}>{user.name}</li>\n                ))}\n            </ul>\n            <LeaveSessionButton sessionTitle={sessionDetails.title} />\n            <UserCards />\n        </div>\n    );\n}\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}